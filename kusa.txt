FunctionDef(
  name: main
  retType: int
  args: [
    Arg(type: int, name: argc)
    Arg(type: charAA, name: argv)
  ]
  statements: Statement: [
  ]
)
If(Condition: Equation(Operator: 12, 
    Left : Immediate(Type: 0, Data: 11451)
    Right: Immediate(Type: 0, Data: 4)
  ),
  statement: Statement: [
    FuncionCall(name: func
        Arguments: [
          Equation(Operator: 0, 
            Left : Immediate(Type: 0, Data: 11)
            Right: Equation(Operator: 0, 
              Left : Immediate(Type: 0, Data: 451)
              Right: Immediate(Type: 0, Data: 4)
            )
          ),
        ]
      )
    If(Condition: Immediate(Type: 0, Data: 114514),
        statement: Statement: [
          FuncionCall(name: func
              Arguments: [
                Equation(Operator: 0, 
                  Left : Immediate(Type: 0, Data: 11)
                  Right: Equation(Operator: 0, 
                    Left : Immediate(Type: 0, Data: 451)
                    Right: Immediate(Type: 0, Data: 4)
                  )
                ),
              ]
            )
        ],
        else-statement:Statement: [
        ]
      )
  ],
  else-statement:Statement: [
  ]
)
If(Condition: Equation(Operator: 0, 
    Left : Immediate(Type: 0, Data: 11451)
    Right: Immediate(Type: 0, Data: 4)
  ),
  statement: Statement: [
  ],
  else-statement:Statement: [
  ]
)
If(Condition: Equation(Operator: 0, 
    Left : Immediate(Type: 0, Data: 11451)
    Right: Immediate(Type: 0, Data: 4)
  ),
  statement: Statement: [
    FuncionCall(name: func
        Arguments: [
          Equation(Operator: 0, 
            Left : Immediate(Type: 0, Data: 11)
            Right: Equation(Operator: 0, 
              Left : Immediate(Type: 0, Data: 451)
              Right: Immediate(Type: 0, Data: 4)
            )
          ),
          Immediate(Type: 0, Data: 1919),
          Immediate(Type: 0, Data: 810),
        ]
      )
    FuncionCall(name: func
        Arguments: [
          Equation(Operator: 0, 
            Left : Immediate(Type: 0, Data: 11)
            Right: Equation(Operator: 0, 
              Left : Immediate(Type: 0, Data: 451)
              Right: Immediate(Type: 0, Data: 4)
            )
          ),
        ]
      )
  ],
  else-statement:Statement: [
    FuncionCall(name: func
        Arguments: [
          Equation(Operator: 0, 
            Left : Immediate(Type: 0, Data: 11)
            Right: Equation(Operator: 0, 
              Left : Immediate(Type: 0, Data: 451)
              Right: Immediate(Type: 0, Data: 4)
            )
          ),
        ]
      )
  ]
)
Assign(type: int, dest: a
  rhs: Equation(Operator: 0, 
    Left : Immediate(Type: 0, Data: 114)
    Right: Equation(Operator: 0, 
      Left : Immediate(Type: 0, Data: 5)
      Right: Immediate(Type: 0, Data: 14)
    )
  )
)
Equation(Operator: 12, 
  Left : Equation(Operator: 0, 
    Left : Immediate(Type: 0, Data: 114)
    Right: Immediate(Type: 0, Data: 5)
  )
  Right: Immediate(Type: 0, Data: 14)
)
